name: Conan Build

on:
  workflow_call:
    inputs:
      platform:
        required: false
        default: 'ubuntu-22.04'
        type: string
      branch:
        required: true
        type: string
      build-type:
        required: true
        type: string
      malloc-impl:
        required: true
        type: string
      prerelease:
        required: false
        type: string
        default: 'False'
      testing:
        required: false
        type: string
        default: 'False'
  workflow_dispatch:
    inputs:
      platform:
        required: true
        type: choice
        options:
          - ubuntu-22.04
          - ubuntu-20.04
        default: 'ubuntu-22.04'
      branch:
        required: true
        type: string
      build-type:
        required: true
        type: choice
        options:
          - Debug
          - Release
          - RelWithDebInfo
      malloc-impl:
        description: 'Allocation Library'
        required: true
        type: choice
        options:
          - libc
          - tcmalloc
          - jemalloc
      prerelease:
        description: 'Fault Instrumentation'
        required: false
        type: choice
        options:
          - 'True'
          - 'False'
        default: 'False'
      testing:
        description: 'Build and Run'
        required: true
        type: choice
        options:
          - 'True'
          - 'False'
        default: 'True'

jobs:
  BuildSislDeps:
    runs-on: ${{ inputs.platform }}
    steps:
    - name: Retrieve Code
      uses: actions/checkout@v3
      with:
        path: deps/sisl
        ref: ${{ inputs.branch }}
      if: ${{ inputs.testing == 'True' }}

    - name: Retrieve Recipe
      uses: actions/checkout@v3
      with:
        repository: ebay/sisl
        path: deps/sisl
        ref: ${{ inputs.branch }}
      if: ${{ inputs.testing == 'False' }}

    - name: Restore Sisl Cache
      id: restore-cache-sisl
      uses: actions/cache/restore@v3
      with:
        path: |
          ~/.conan/data
        key: SislDeps8-${{ inputs.platform }}-${{ inputs.build-type }}-${{ inputs.malloc-impl }}-${{ inputs.prerelease }}-${{ hashFiles('**/conanfile.py') }}

    - name: Restore Testing Cache
      id: restore-cache-testing-sisl
      uses: actions/cache/restore@v3
      with:
        path: |
          ~/.conan/data
        key: SislDeps8-${{ inputs.platform }}-${{ inputs.build-type }}-${{ inputs.malloc-impl }}-${{ inputs.prerelease }}-
      if: ${{ github.event_name == 'pull_request' && inputs.testing == 'True' && steps.restore-cache-sisl.outputs.cache-hit != 'true' }}

    - name: Setup Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"
      if: ${{ inputs.testing == 'True' || steps.restore-cache-sisl.outputs.cache-hit != 'true' }}

    - name: Setup Conan and Export Recipes
      run: |
        python -m pip install --upgrade pip
        python -m pip install conan~=1.0
        conan user
        conan profile new --detect default
        conan export deps/sisl/3rd_party/gperftools
        conan export deps/sisl/3rd_party/jemalloc
        conan export deps/sisl/3rd_party/prerelease_dummy
        conan export deps/sisl/3rd_party/pistache pistache/cci.20201127@
        cached_pkgs=$(ls -1d ~/.conan/data/*/*/*/*/package | sed 's,.*data/,,' | cut -d'/' -f1,2 | paste -sd',' - -)
        echo "::info:: Pre-cached: ${cached_pkgs}"
      if: ${{ inputs.testing == 'True' || steps.restore-cache-sisl.outputs.cache-hit != 'true' }}

    - name: Fixup libstdc++
      run: |
        # Set std::string to non-CoW C++11 version
        sed -i 's,compiler.libcxx=libstdc++$,compiler.libcxx=libstdc++11,g' ~/.conan/profiles/default
      if: ${{ inputs.platform == 'ubuntu-22.04' && ( inputs.testing == 'True' || steps.restore-cache-sisl.outputs.cache-hit != 'true' ) }}

    - name: Build Cache
      run: |
        conan install \
            -o prerelease=${{ inputs.prerelease }} \
            -o malloc_impl=${{ inputs.malloc-impl }} \
            -s build_type=${{ inputs.build-type }} \
            --build missing \
            deps/sisl
      if: ${{ steps.restore-cache-sisl.outputs.cache-hit != 'true' }}

    - name: Clean Package Cache
      run: |
        dep_pkgs=$(ls -1d deps/sisl/3rd_party/* 2>/dev/null | cut -d'/' -f4 | paste -sd'|' - -)
        if [ -z "${dep_pkgs}" ]; then
           dep_pkgs="no_3rd_party"
        fi
        dirty_pkgs=$(ls -1d ~/.conan/data/*/*/*/*/build 2>/dev/null | sed 's,.*data/,,')
        if [ -z "${dirty_pkgs}" ]; then
           dirty_pkgs="no_public/0"
        fi
        dirty_pkgs_d=$(echo "${dirty_pkgs}" | cut -d'/' -f1 | paste -sd'|' - -)
        echo "::info:: Caching: ${dirty_pkgs_d}|${dep_pkgs}"
        ls -1d ~/.conan/data/* | grep -Ev "(${dirty_pkgs_d}|${dep_pkgs})" | xargs rm -rf
        rm -rf ~/.conan/data/*/*/*/*/build
        rm -rf ~/.conan/data/*/*/*/*/source
      if: ${{ github.event_name != 'pull_request' && steps.restore-cache-sisl.outputs.cache-hit != 'true' }}

    - name: Save Sisl Cache
      id: save-cache-sisl
      uses: actions/cache/save@v3
      with:
        path: |
          ~/.conan/data
        key: SislDeps8-${{ inputs.platform }}-${{ inputs.build-type }}-${{ inputs.malloc-impl }}-${{ inputs.prerelease }}-${{ hashFiles('**/conanfile.py') }}
      if: ${{ github.event_name != 'pull_request' && steps.restore-cache-sisl.outputs.cache-hit != 'true' }}

    - name: Create and test Package
      run: |
        conan create \
            -o sisl:prerelease=${{ inputs.prerelease }} \
            -o sisl:malloc_impl=${{ inputs.malloc-impl }} \
            -s build_type=${{ inputs.build-type }} \
            --build missing \
            deps/sisl
        conan remove -f sisl
      if: ${{ inputs.testing == 'True' }}
