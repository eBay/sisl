name: Conan Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

#env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  #BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8"]
        build-type: ["Debug", "Release"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Conan
      run: |
        python -m pip install --upgrade pip
        python -m pip install conan

    - name: Configure Conan
      # Configure conan profiles for build runner
      run: |
        conan user

    - name: Install dependencies
      # Build your program with the given configuration
      run: |
        conan install -o malloc_impl=libc -o prerelease=False -s build_type=${{ matrix.build-type }} --build missing .

    - name: Build
      # Build your program with the given configuration
      run: |
        conan build .
