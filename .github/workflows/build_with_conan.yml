name: Conan Build

on:
  push:
    branches:
      - master
      - 'stable/v*'
  pull_request:
    branches:
      - master
      - 'stable/v*'

#env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  #BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        # Currently folly in conan-center has a bug when used with gcc 11.3 and sanitizer
        # sanitize: ["True", "False"]
        build-type: ["Debug", "Release"]
        malloc-impl: ["libc", "tcmalloc", "jemalloc"]
        prerelease: ["True", "False"]
        exclude:
          - build-type: Debug
            prerelease: "True"
          - build-type: Debug
            malloc-impl: tcmalloc
          - build-type: Debug
            malloc-impl: jemalloc
          - build-type: Release
            malloc-impl: libc
          # - build-type: Release
          # sanitize: "True"
          - prerelease: "True"
            malloc-impl: jemalloc

    steps:
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"

    - name: Install Conan
      run: |
        python -m pip install --upgrade pip
        python -m pip install conan~=1.0

    - name: Configure Conan
      # Configure conan profiles for build runner
      run: |
        conan user
        conan profile new --detect default
        sed -i 's,compiler.libcxx=libstdc++$,compiler.libcxx=libstdc++11,g' ~/.conan/profiles/default

    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Cache 3rdParty
      id: cache-3rd-party
      uses: actions/cache@v3
      with:
        path: |
          ~/.conan/data/folly
          ~/.conan/data/gperftools
          ~/.conan/data/jemalloc
          ~/.conan/data/prerelease_dummy
          ~/.conan/data/spdlog
        key: ${{ matrix.build-type }}-${{ matrix.malloc-impl }}

    - name: Export Dependencies
      run: |
        conan export 3rd_party/gperftools
        conan export 3rd_party/jemalloc
        conan export 3rd_party/prerelease_dummy

    - name: Install dependencies
      run: |
        conan install \
            -o prerelease=${{ matrix.prerelease }} \
            -o malloc_impl=${{ matrix.malloc-impl }} \
            -s build_type=${{ matrix.build-type }} \
            --build missing .
            #-o sanitize=${{ matrix.sanitize }} \

    - name: Cleanup dep builds
      run: |
        rm -rf ~/.conan/data/*/*/*/*/build

    - name: Build
      # Build your program with the given configuration
      run: |
        conan build .
